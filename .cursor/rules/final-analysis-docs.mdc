---
description: 
globs: core/analysis/final_analysis.py,config/prompts/final_analysis_prompt.py,config/agents.py,tests/final_analysis_test/run_test.py
alwaysApply: false
---
The Final Analysis phase is the culmination of the entire project analysis pipeline. It takes the consolidated report from Phase 5 and transforms it into actionable Cursor rules for the Cursor IDE. Here's what it does:

1. It uses an AI model (configured to be GPT-4o Precise by default in `agents.py`) to analyze the consolidated report from Phase 5.

2. The `FinalAnalysis` class initializes the appropriate architect via `get_architect_for_phase("final")` and then calls its `final_analysis` method with the consolidated report and a formatted prompt.

3. The prompt (defined in `final_analysis_prompt.py`) follows the CRS-1 (Cursor Rules Specification) format and instructs the model to create a tailored system prompt that will:
   - Establish an identity for the AI assistant
   - Define technical constraints and dependencies
   - Provide imperative directives (requirements)
   - Create a knowledge framework with documentation, patterns, and best practices
   - Include implementation examples
   - Warn about negative patterns to avoid
   - Establish knowledge evolution mechanisms

4. The output from this phase is saved as a `.cursorrules` file in the project root directory, which the Cursor IDE can then use to provide context-aware assistance when working with the codebase.

5. The report is structured to help the AI assistant in Cursor understand the project's architecture, dependencies, patterns, and best practices so it can provide more relevant and accurate suggestions when coding.

The Final Analysis phase essentially creates a specialized AI assistant persona tailored to the specific codebase that developers can interact with in the Cursor IDE.
