---
description: 
globs: config/prompts/phase_1_prompts.py,core/analysis/phase_1.py,config/agents.py,tests/phase_1_test/run_test.py
alwaysApply: false
---
I'll explain what Phase 1 (Initial Discovery) does in the CursorRules Architect project.

Phase 1 is the first stage of the project analysis pipeline, focused on initial exploration and discovery. It serves as the foundation for later analysis phases by gathering key information about the project's structure and technologies.

The process has three main components:

1. **Three Specialized Agents**:
   - **Structure Agent**: Analyzes directory/file organization, maps project layout, and identifies key architectural components
   - **Dependency Agent**: Investigates packages and libraries, determines version requirements, and researches compatibility issues
   - **Tech Stack Agent**: Identifies frameworks and technologies used, gathers documentation, and notes current best practices

2. **Implementation Details**:
   - Runs the three agents concurrently using asyncio
   - Each agent analyzes the same project tree and package information
   - Returns structured findings from each agent's analysis

3. **Workflow**:
   - `main.py` creates the project tree and passes it to Phase 1
   - `phase_1.py` initializes the three agents and runs them concurrently
   - Each agent has specific prompts defined in `phase_1_prompts.py`
   - The agent configurations (model, reasoning mode) come from `config/agents.py`
   - Results are collected and returned as a dictionary for Phase 2 to use

The output of Phase 1 is a comprehensive overview of the project's structure, dependencies, and technology stack - essential information that later phases will use for deeper analysis.

Phase 1 is not hardcoded to use any specific model - it's configurable through the `config/agents.py` file.

Looking at the code:

1. In `phase_1.py`, it doesn't directly import the AnthropicArchitect, but instead uses:
   ```python
   from config.agents import get_architect_for_phase
   ```

2. In the initialization of Phase1Analysis, it creates architects using this factory function:
   ```python
   self.architects = [
       get_architect_for_phase("phase1", name=STRUCTURE_AGENT_PROMPT["name"], ...),
       get_architect_for_phase("phase1", name=DEPENDENCY_AGENT_PROMPT["name"], ...),
       get_architect_for_phase("phase1", name=TECH_STACK_AGENT_PROMPT["name"], ...)
   ]
   ```

3. The `get_architect_for_phase` function in `agents.py` looks up the model configuration for "phase1" from the `MODEL_CONFIG` dictionary:
   ```python
   # Default model configuration
   MODEL_CONFIG = {
       # Phase 1: Initial Discovery
       "phase1": CLAUDE_BASIC,
       # ... other phases ...
   }
   ```

4. While the default is `CLAUDE_BASIC`, this is just a configuration that can be changed. The `get_architect_for_phase` function supports creating architects from multiple providers:
   - AnthropicArchitect
   - OpenAIArchitect
   - DeepSeekArchitect
   - GeminiArchitect

So Phase 1 is configured to use Claude by default, but the architecture allows you to easily switch to OpenAI, DeepSeek, or Gemini models by just changing the `MODEL_CONFIG` dictionary in `agents.py`.
